[gd_resource type="VisualShader" load_steps=7 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec3Uniform" id=3]
uniform_name = "Speed"

[sub_resource type="VisualShaderNodeVectorOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=5]

[sub_resource type="VisualShaderNodeTextureUniform" id=6]
uniform_name = "TextureUniform"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform vec3 Speed;
uniform sampler2D TextureUniform;



void vertex() {
// Output:0

}

void fragment() {
// VectorUniform:4
	vec3 n_out4p0 = Speed;

// Input:2
	float n_out2p0 = TIME;

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * vec3(n_out2p0);

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorOp:6
	vec3 n_out6p0 = n_out5p0 + n_out3p0;

// TextureUniform:7
	vec3 n_out7p0;
	float n_out7p1;
	{
		vec4 n_tex_read = texture(TextureUniform, n_out6p0.xy);
		n_out7p0 = n_tex_read.rgb;
		n_out7p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out7p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -326.359, 64.7953 )
nodes/fragment/0/position = Vector2( 1380, 280 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 340, 380 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 320, 500 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 340, 200 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 700, 100 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 860, 320 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( 1012, 492 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 2, 0, 5, 1, 5, 0, 6, 0, 3, 0, 6, 1, 6, 0, 7, 0, 7, 0, 0, 0 )
